// TEST VECTORS
//=============
#include "abi.h"
#include <stdint.h>

//----------------------
// 1. Basic definitions
// The first set of vectors tests basic ABI functionality (i.e. NOT including tuples)
// These vectors were built manually in an attempt to cover all types of ABI definitions
// (i.e. covering elementary params, dynamic params, and all types of mixing and matching with
// and withour array types)
//----------------------

// 1: function baz(uint32 x, bool y)
ABI_t ex1_abi[2] = {
  { .type = ABI_UINT32 },
  { .type = ABI_BOOL }
};
uint8_t ex1_encoded[68] = {
  0xcd, 0xcd, 0x77, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};
uint32_t ex1_param_0 = 69;
bool ex1_param_1 = true;

// 2: function bar(bytes3[2])
ABI_t ex2_abi[1] = {
  { .type = ABI_BYTES3, .isArray = true, .arraySz = 2 }
};
uint8_t ex2_encoded[68] = {
  0xfc, 0xe3, 0x53, 0xf6, 
  0x61, 0x62, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x64, 0x65, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t ex2_param_00[3] = { 0x61, 0x62, 0x63 };
uint8_t ex2_param_01[3] = { 0x64, 0x65, 0x66 };

// 3: function sam(bytes, bool, uint[])
ABI_t ex3_abi[3] = {
  { .type = ABI_BYTES },
  { .type = ABI_BOOL },
  { .type = ABI_UINT, .isArray = true }
};
uint8_t ex3_encoded[292] = {
  0xa5, 0x64, 0x3b, 0xf2, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, // 4 "BYTES"
  0x64, 0x61, 0x76, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // 3 "UINT"
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03
};
uint8_t ex3_param_0[4] = { 0x64, 0x61, 0x76, 0x65 };
bool ex3_param_1 = true;
uint8_t ex3_param_20[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};
uint8_t ex3_param_21[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
};
uint8_t ex3_param_22[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03
};

// 4: f(uint,uint32[],bytes10,bytes)
ABI_t ex4_abi[4] = {
  { .type = ABI_UINT },
  { .type = ABI_UINT32, .isArray = true },
  { .type = ABI_BYTES10 },
  { .type = ABI_BYTES }
};

uint8_t ex4_encoded[292] = {
  0x8b, 0xe6, 0x52, 0x46,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x23,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x56,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x89,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d,
  0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t ex4_param_0[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x23, 
};
uint32_t ex4_param_10 = 1110;
uint32_t ex4_param_11 = 1929;
uint8_t ex4_param_2[10] = { 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30 };
uint8_t ex4_param_3[13] = { 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21 };


// 5: f(uint[3], uint[])
ABI_t ex5_abi[2] = {
  { .type = ABI_UINT, .isArray = true, .arraySz = 3 },
  { .type = ABI_UINT, .isArray = true },
};
uint8_t ex5_encoded[228] = {
  0x18, 0x5b, 0xfd, 0x26,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37,
};
uint8_t ex5_param_00[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
};
uint8_t ex5_param_01[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,
};
uint8_t ex5_param_02[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
};
uint8_t ex5_param_10[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c,
};
uint8_t ex5_param_11[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37,
};


// 6: f(string[2], string[], string[1])
ABI_t ex6_abi[3] = {
  { .type = ABI_STRING, .isArray = true, .arraySz = 2 },
  { .type = ABI_STRING, .isArray = true },
  { .type = ABI_STRING, .isArray = true, .arraySz = 1 },
};
uint8_t ex6_encoded[704] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x74, 0x77, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x74, 0x77, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x74, 0x68, 0x72, 0x65, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t ex6_param_00[3] = { 0x6f, 0x6e, 0x65, };
uint8_t ex6_param_01[3] = { 0x74, 0x77, 0x6f, };
uint8_t ex6_param_10[3] = { 0x6f, 0x6e, 0x65, };
uint8_t ex6_param_11[3] = { 0x74, 0x77, 0x6f, };
uint8_t ex6_param_12[5] = { 0x74, 0x68, 0x72, 0x65, 0x65, };
uint8_t ex6_param_20[3] = { 0x6f, 0x6e, 0x65, };


// 7: f(string[3], uint[])
ABI_t ex7_abi[2] = {
  { .type = ABI_STRING, .isArray = true, .arraySz = 3 },
  { .type = ABI_UINT, .isArray = true },
};
uint8_t ex7_encoded[448] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x74, 0x77, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x74, 0x68, 0x72, 0x65, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
};
uint8_t ex7_param_00[3] = { 0x6f, 0x6e, 0x65, };
uint8_t ex7_param_01[3] = { 0x74, 0x77, 0x6f, };
uint8_t ex7_param_02[5] = { 0x74, 0x68, 0x72, 0x65, 0x65, };
uint8_t ex7_param_10[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
};
uint8_t ex7_param_11[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
};

// 8: f(string[], uint[2])
ABI_t ex8_abi[2] = {
  { .type = ABI_STRING, .isArray = true, },
  { .type = ABI_UINT, .isArray = true, .arraySz = 2 },
};
uint8_t ex8_encoded[416] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x74, 0x77, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x74, 0x68, 0x72, 0x65, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t ex8_param_00[3] = { 0x6f, 0x6e, 0x65, };
uint8_t ex8_param_01[3] = { 0x74, 0x77, 0x6f, };
uint8_t ex8_param_02[5] = { 0x74, 0x68, 0x72, 0x65, 0x65, };
uint8_t ex8_param_10[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
};
uint8_t ex8_param_11[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
};

// 9: f(address,address[1],address[],bool)
ABI_t ex9_abi[4] = {
  { .type = ABI_ADDRESS, },
  { .type = ABI_ADDRESS, .isArray = true, .arraySz = 1 },
  { .type = ABI_ADDRESS, .isArray = true, },
  { .type = ABI_BOOL, }
};
uint8_t ex9_encoded[224] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x3e, 0xb6, 0x58,
  0x43, 0x8b, 0x88, 0x36, 0x70, 0x1d, 0x2d, 0xde, 0x7a, 0x1a, 0xe0, 0xa4, 0xce, 0xe2, 0x29, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x43, 0xdf, 0x6a,
  0xc4, 0x1a, 0x6b, 0x1a, 0xf5, 0xf8, 0xb8, 0x59, 0xa5, 0xd7, 0xd5, 0xbb, 0x69, 0xba, 0x0b, 0xb1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xab, 0xba, 0x91,
  0x00, 0x6f, 0x44, 0x2d, 0x95, 0x3a, 0xda, 0x1f, 0xf7, 0x00, 0x2d, 0x80, 0xa0, 0x26, 0x72, 0x62,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcd, 0xb2, 0x09, 0x13,
  0xf8, 0x67, 0x00, 0x1b, 0x63, 0x0a, 0xf7, 0x0d, 0xbb, 0x86, 0xf1, 0x21, 0xb0, 0xdc, 0x15, 0xed,
};
uint8_t ex9_param_0[20] = {
  0x26, 0x3e, 0xb6, 0x58, 0x43, 0x8b, 0x88, 0x36, 0x70, 0x1d, 0x2d, 0xde, 0x7a, 0x1a, 0xe0, 0xa4,
  0xce, 0xe2, 0x29, 0x03,
};
uint8_t ex9_param_10[20] = {
  0x2a, 0x43, 0xdf, 0x6a, 0xc4, 0x1a, 0x6b, 0x1a, 0xf5, 0xf8, 0xb8, 0x59, 0xa5, 0xd7, 0xd5, 0xbb,
  0x69, 0xba, 0x0b, 0xb1,
};
uint8_t ex9_param_20[20] = {
  0x08, 0xab, 0xba, 0x91, 0x00, 0x6f, 0x44, 0x2d, 0x95, 0x3a, 0xda, 0x1f, 0xf7, 0x00, 0x2d, 0x80,
  0xa0, 0x26, 0x72, 0x62,
};
uint8_t ex9_param_21[20] = {
  0xcd, 0xb2, 0x09, 0x13, 0xf8, 0x67, 0x00, 0x1b, 0x63, 0x0a, 0xf7, 0x0d, 0xbb, 0x86, 0xf1, 0x21,
  0xb0, 0xdc, 0x15, 0xed,
};
uint8_t ex9_param_3[1] = { 0x01 };

// 10: f(uint[3], uint[])
ABI_t ex10_abi[2] = {
  { .type = ABI_UINT, .isArray = true, .arraySz = 3 },
  { .type = ABI_UINT, .isArray = true, },
};
uint8_t ex10_encoded[224] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x2f, 0x26, 0x6c,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x2d, 0x92, 0x75,
};
uint8_t ex10_param_00[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};
uint8_t ex10_param_01[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
};
uint8_t ex10_param_02[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
};
uint8_t ex10_param_10[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x2f, 0x26, 0x6c,
};
uint8_t ex10_param_11[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x2d, 0x92, 0x75,
};

// 11: f(bytes, bytes[5], bool)
ABI_t ex11_abi[3] = {
  { .type = ABI_BYTES, },
  { .type = ABI_BYTES, .isArray = true, .arraySz = 5 },
  { .type = ABI_BOOL, },
};
uint8_t ex11_encoded[736] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
  0x55, 0x9f, 0xbc, 0x4a, 0x34, 0x9c, 0xae, 0xcc, 0x22, 0xca, 0x46, 0x0c, 0x26, 0xd9, 0x31, 0x3f,
  0xce, 0xd2, 0xf5, 0x62, 0x49, 0xf5, 0x9f, 0xca, 0x3e, 0x42, 0x80, 0x32, 0x18, 0x92, 0x44, 0x98,
  0x70, 0xd9, 0x72, 0x94, 0xe4, 0x4b, 0xa0, 0x78, 0x81, 0xb6, 0xd5, 0x00, 0x30, 0x93, 0x0c, 0xd7,
  0xa8, 0x0c, 0x81, 0x7b, 0x9e, 0x4a, 0xb8, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,
  0xa3, 0xc4, 0x5b, 0x95, 0xc5, 0x24, 0xb8, 0x2c, 0xe6, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x26, 0xae, 0xc4, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16,
  0x9b, 0x64, 0x91, 0xb9, 0xc2, 0x12, 0x4f, 0x9d, 0x99, 0x9e, 0xfe, 0xc0, 0xce, 0x96, 0xd2, 0x26,
  0x35, 0xc1, 0xba, 0xe3, 0x87, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47,
  0x86, 0xdc, 0xf1, 0xf8, 0x25, 0x4b, 0x3f, 0xd7, 0x5b, 0x86, 0x0d, 0x7e, 0x71, 0xd7, 0x2f, 0xfa,
  0xcc, 0xac, 0x72, 0x48, 0x6f, 0xa4, 0x35, 0x44, 0x6c, 0xd9, 0xc5, 0xee, 0x13, 0x8a, 0xea, 0x75,
  0x90, 0x23, 0xe0, 0x61, 0xe6, 0xaa, 0x1d, 0x3d, 0xc1, 0x1a, 0x31, 0x05, 0x1c, 0x3a, 0x8e, 0x63,
  0xd3, 0x09, 0x10, 0xe4, 0x8b, 0x5a, 0x81, 0x81, 0x28, 0xc3, 0xa1, 0xbc, 0x31, 0xfe, 0x9b, 0x08,
  0x2a, 0xff, 0xea, 0x39, 0x09, 0x40, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
  0x76, 0x2d, 0x16, 0xdd, 0x5c, 0x9c, 0xf9, 0xa4, 0x24, 0x7b, 0x43, 0x4e, 0x84, 0xcf, 0x04, 0xa7,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t ex11_param_0[56] = {
  0x55, 0x9f, 0xbc, 0x4a, 0x34, 0x9c, 0xae, 0xcc, 0x22, 0xca, 0x46, 0x0c, 0x26, 0xd9, 0x31, 0x3f,
  0xce, 0xd2, 0xf5, 0x62, 0x49, 0xf5, 0x9f, 0xca, 0x3e, 0x42, 0x80, 0x32, 0x18, 0x92, 0x44, 0x98,
  0x70, 0xd9, 0x72, 0x94, 0xe4, 0x4b, 0xa0, 0x78, 0x81, 0xb6, 0xd5, 0x00, 0x30, 0x93, 0x0c, 0xd7,
  0xa8, 0x0c, 0x81, 0x7b, 0x9e, 0x4a, 0xb8, 0x66,
};
uint8_t ex11_param_10[10] = {
  0xa3, 0xc4, 0x5b, 0x95, 0xc5, 0x24, 0xb8, 0x2c, 0xe6, 0x27,
};
uint8_t ex11_param_11[4] = {
  0x26, 0xae, 0xc4, 0x3b,
};
uint8_t ex11_param_12[22] = {
  0x9b, 0x64, 0x91, 0xb9, 0xc2, 0x12, 0x4f, 0x9d, 0x99, 0x9e, 0xfe, 0xc0, 0xce, 0x96, 0xd2, 0x26,
  0x35, 0xc1, 0xba, 0xe3, 0x87, 0xef,
};
uint8_t ex11_param_13[71] = {
  0x86, 0xdc, 0xf1, 0xf8, 0x25, 0x4b, 0x3f, 0xd7, 0x5b, 0x86, 0x0d, 0x7e, 0x71, 0xd7, 0x2f, 0xfa,
  0xcc, 0xac, 0x72, 0x48, 0x6f, 0xa4, 0x35, 0x44, 0x6c, 0xd9, 0xc5, 0xee, 0x13, 0x8a, 0xea, 0x75,
  0x90, 0x23, 0xe0, 0x61, 0xe6, 0xaa, 0x1d, 0x3d, 0xc1, 0x1a, 0x31, 0x05, 0x1c, 0x3a, 0x8e, 0x63,
  0xd3, 0x09, 0x10, 0xe4, 0x8b, 0x5a, 0x81, 0x81, 0x28, 0xc3, 0xa1, 0xbc, 0x31, 0xfe, 0x9b, 0x08,
  0x2a, 0xff, 0xea, 0x39, 0x09, 0x40, 0x50,
};
uint8_t ex11_param_14[16] = {
  0x76, 0x2d, 0x16, 0xdd, 0x5c, 0x9c, 0xf9, 0xa4, 0x24, 0x7b, 0x43, 0x4e, 0x84, 0xcf, 0x04, 0xa7,
};
uint8_t ex11_param_2[1] = {
  0x01,
};

// 12: f(bytes[3], bytes, uint32, bytes[2])
ABI_t ex12_abi[4] = {
  { .type = ABI_BYTES, .isArray = true, .arraySz = 3 },
  { .type = ABI_BYTES, },
  { .type = ABI_UINT32, },
  { .type = ABI_BYTES, .isArray = true, .arraySz = 2 },
};
uint8_t ex12_encoded[704] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe2, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x98, 0x46, 0x1b, 0x01, 0x21, 0x70, 0x2c, 0x56, 0xc4, 0xee, 0x0b, 0x47, 0x02, 0x1d, 0xd0, 0xff,
  0xaa, 0x32, 0x90, 0xdd, 0xac, 0x5e, 0x44, 0x9f, 0x29, 0x0b, 0xda, 0xf2, 0x99, 0xd0, 0x56, 0x7e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x11, 0xe5, 0x9b, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28,
  0x0b, 0xf1, 0xa5, 0x6d, 0x9a, 0xa7, 0x9a, 0x03, 0x30, 0x21, 0x6e, 0xf5, 0xc8, 0x4c, 0xda, 0xfc,
  0x9e, 0xa9, 0xb4, 0xc9, 0x8a, 0x69, 0x66, 0xe5, 0x85, 0x92, 0xe9, 0x99, 0xa7, 0xa5, 0x2c, 0x63,
  0x6f, 0x94, 0x72, 0xe5, 0xc4, 0x21, 0xa3, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
  0x66, 0xaa, 0x87, 0x1a, 0x17, 0xd5, 0x75, 0xf2, 0x11, 0x68, 0x91, 0xdd, 0xf9, 0xf4, 0xa0, 0x02,
  0x93, 0x45, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
  0x57, 0x14, 0x22, 0x79, 0x1a, 0xd3, 0xee, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
  0xa1, 0x0a, 0x62, 0xb4, 0x15, 0xec, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t ex12_param_00[32] = {
  0x98, 0x46, 0x1b, 0x01, 0x21, 0x70, 0x2c, 0x56, 0xc4, 0xee, 0x0b, 0x47, 0x02, 0x1d, 0xd0, 0xff,
  0xaa, 0x32, 0x90, 0xdd, 0xac, 0x5e, 0x44, 0x9f, 0x29, 0x0b, 0xda, 0xf2, 0x99, 0xd0, 0x56, 0x7e,
};
uint8_t ex12_param_01[4] = {
  0x11, 0xe5, 0x9b, 0x40,
};
uint8_t ex12_param_02[40] = {
  0x0b, 0xf1, 0xa5, 0x6d, 0x9a, 0xa7, 0x9a, 0x03, 0x30, 0x21, 0x6e, 0xf5, 0xc8, 0x4c, 0xda, 0xfc,
  0x9e, 0xa9, 0xb4, 0xc9, 0x8a, 0x69, 0x66, 0xe5, 0x85, 0x92, 0xe9, 0x99, 0xa7, 0xa5, 0x2c, 0x63,
  0x6f, 0x94, 0x72, 0xe5, 0xc4, 0x21, 0xa3, 0xd0,
};
uint8_t ex12_param_1[19] = {
  0x66, 0xaa, 0x87, 0x1a, 0x17, 0xd5, 0x75, 0xf2, 0x11, 0x68, 0x91, 0xdd, 0xf9, 0xf4, 0xa0, 0x02,
  0x93, 0x45, 0x69,
};
uint32_t ex12_param_2 = 123456;

uint8_t ex12_param_30[8] = {
  0x57, 0x14, 0x22, 0x79, 0x1a, 0xd3, 0xee, 0xe0,
};
uint8_t ex12_param_31[7] = {
  0xa1, 0x0a, 0x62, 0xb4, 0x15, 0xec, 0x1a,
};

// 13: f(bytes[], string[])
ABI_t ex13_abi[2] = {
  { .type = ABI_BYTES, .isArray = true, },
  { .type = ABI_STRING, .isArray = true, },
};

uint8_t ex13_encoded[512] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x13, 0x66, 0x36, 0xf8, 0x8c, 0x36, 0xfc, 0x4e, 0x9a, 0x26, 0xc6, 0xc7, 0x61, 0x4c, 0x62, 0x4a,
  0x8b, 0xfc, 0xaf, 0x85, 0x35, 0xa3, 0xc2, 0x19, 0x6e, 0x74, 0xbe, 0x2d, 0xec, 0x5e, 0xcb, 0xa1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x23, 0xfb, 0xb0, 0xdb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x6f, 0x6e, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x74, 0x77, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t ex13_param_00[32] = {
  0x13, 0x66, 0x36, 0xf8, 0x8c, 0x36, 0xfc, 0x4e, 0x9a, 0x26, 0xc6, 0xc7, 0x61, 0x4c, 0x62, 0x4a,
  0x8b, 0xfc, 0xaf, 0x85, 0x35, 0xa3, 0xc2, 0x19, 0x6e, 0x74, 0xbe, 0x2d, 0xec, 0x5e, 0xcb, 0xa1,
};

uint8_t ex13_param_01[4] = {
  0x23, 0xfb, 0xb0, 0xdb,
};

uint8_t ex13_param_10[3] = {
  0x6f, 0x6e, 0x65,
};

uint8_t ex13_param_11[3] = {
  0x74, 0x77, 0x6f,
};

//----------------------
// 2. Advanced: tuples
// These vectors are used to test decoding of tuple types. These vectors are based on Ethereum
// mainnet transactions which call functions containing tuple types in the definitions. Each
// vector includes a comment with a link to the transaction used to build it.
//----------------------

// fillOrder:
// Referenced from this transaction: https://etherscan.io/tx/0x8f6d830ba45cf5851fa6d47b850aa6934bf6683b238b55ea4b4ebca1fdba693d
ABI_t fillOrder_abi[15] = {
	{ .type = ABI_TUPLE12, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_BYTES, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_BYTES, .isArray = false, .arraySz = 0 },
	{ .type = ABI_BYTES, .isArray = false, .arraySz = 0 }
};

uint8_t fillOrder_p1[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x42, 0x40, 
};

uint8_t fillOrder_p2_0[66] = {
  0x1c, 0xca, 0x64, 0x94, 0x27, 0x3a, 0xa0, 0x9c, 0x8e, 0xba, 0x3b, 0x4c, 0x78, 0x9c, 0xe0, 0x86, 
  0xdf, 0xad, 0x0d, 0x93, 0xff, 0x39, 0x74, 0x0b, 0x26, 0x06, 0x76, 0x58, 0xd9, 0x44, 0x39, 0xd8, 
  0x77, 0x59, 0x4f, 0x5c, 0x9c, 0xe8, 0xc9, 0x5c, 0x0d, 0xba, 0x45, 0xfc, 0x7e, 0xc3, 0x71, 0x44, 
  0x1d, 0xdd, 0x01, 0x64, 0x1b, 0x54, 0x7b, 0x14, 0xf6, 0x36, 0x08, 0x87, 0x23, 0x88, 0x58, 0x07, 
  0x25, 0x02,
};

uint8_t fillOrder_p0_t0[20] = {
  0x71, 0x9b, 0x8b, 0xe8, 0xe2, 0xc3, 0xf0, 0x75, 0x75, 0xd4, 0x1a, 0x25, 0x80, 0x01, 0x1d, 0xb7, 
  0x02, 0x02, 0x9e, 0x5b, 
};

uint8_t fillOrder_p0_t1[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

uint8_t fillOrder_p0_t2[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00,
};

uint8_t fillOrder_p0_t3[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00,
};
uint8_t fillOrder_p0_t4[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x00, 
};

uint8_t fillOrder_p0_t5[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x42, 0x40, 
};

uint8_t fillOrder_p0_t6[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t fillOrder_p0_t7[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t fillOrder_p0_t8[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6c, 0xc8, 0xa5, 0xba, 0x9a, 
};

uint8_t fillOrder_p0_t9[32] = {
  0x44, 0xa8, 0xd6, 0xcc, 0x3b, 0xd2, 0x52, 0x59, 0x1a, 0xaf, 0xb4, 0x6f, 0x53, 0xc8, 0x16, 0x5f, 
  0x6e, 0x43, 0xbe, 0xb3, 0x72, 0x6a, 0x74, 0x81, 0xa9, 0x76, 0x09, 0xf2, 0x4e, 0x1f, 0x2a, 0x9d, 
};

uint8_t fillOrder_p0_t10[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08, 
  0x3c, 0x75, 0x6c, 0xc2,
}; 

uint8_t fillOrder_p0_t11[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x94, 0x9b, 0xed, 0x88, 0x6c, 0x73, 0x9f, 0x1a, 0x32, 0x73, 0x62, 0x9b, 0x33, 0x20, 0xdb, 0x0c, 
  0x50, 0x24, 0xc7, 0x19,
};

uint8_t fillOrder_encoded[804] = {
  0xb4, 0xbe, 0x83, 0xd5, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x42, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xa0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x9b, 0x8b, 0xe8, 
  0xe2, 0xc3, 0xf0, 0x75, 0x75, 0xd4, 0x1a, 0x25, 0x80, 0x01, 0x1d, 0xb7, 0x02, 0x02, 0x9e, 0x5b, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x42, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6c, 0xc8, 0xa5, 0xba, 0x9a, 
  0x44, 0xa8, 0xd6, 0xcc, 0x3b, 0xd2, 0x52, 0x59, 0x1a, 0xaf, 0xb4, 0x6f, 0x53, 0xc8, 0x16, 0x5f, 
  0x6e, 0x43, 0xbe, 0xb3, 0x72, 0x6a, 0x74, 0x81, 0xa9, 0x76, 0x09, 0xf2, 0x4e, 0x1f, 0x2a, 0x9d, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08, 
  0x3c, 0x75, 0x6c, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x94, 0x9b, 0xed, 0x88, 0x6c, 0x73, 0x9f, 0x1a, 0x32, 0x73, 0x62, 0x9b, 0x33, 0x20, 0xdb, 0x0c, 
  0x50, 0x24, 0xc7, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
  0x1c, 0xca, 0x64, 0x94, 0x27, 0x3a, 0xa0, 0x9c, 0x8e, 0xba, 0x3b, 0x4c, 0x78, 0x9c, 0xe0, 0x86, 
  0xdf, 0xad, 0x0d, 0x93, 0xff, 0x39, 0x74, 0x0b, 0x26, 0x06, 0x76, 0x58, 0xd9, 0x44, 0x39, 0xd8, 
  0x77, 0x59, 0x4f, 0x5c, 0x9c, 0xe8, 0xc9, 0x5c, 0x0d, 0xba, 0x45, 0xfc, 0x7e, 0xc3, 0x71, 0x44, 
  0x1d, 0xdd, 0x01, 0x64, 0x1b, 0x54, 0x7b, 0x14, 0xf6, 0x36, 0x08, 0x87, 0x23, 0x88, 0x58, 0x07, 
  0x25, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

ABI_t marketSellOrders_abi[15] = {
	{ .type = ABI_TUPLE12, .isArray = true, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_BYTES, .isArray = true, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_ADDRESS, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_UINT256, .isArray = false, .arraySz = 0 },
	{ .type = ABI_BYTES, .isArray = false, .arraySz = 0 },
	{ .type = ABI_BYTES, .isArray = false, .arraySz = 0 }
};

uint8_t marketSellOrders_encoded[2468] = {
  0x7e, 0x1d, 0x98, 0x08, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xa0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xa0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xee, 0xcf, 0x93, 
  0x68, 0xd1, 0x51, 0xcd, 0x24, 0x25, 0xca, 0x54, 0x76, 0x95, 0xe5, 0x1e, 0xa8, 0xba, 0x13, 0xc7, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x15, 0x0a, 0x33, 
  0xff, 0xa9, 0x7a, 0x8d, 0x22, 0xf5, 0x9c, 0x77, 0xae, 0x54, 0x87, 0xb0, 0x89, 0xef, 0x62, 0xe9, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xc3, 0x79, 0x37, 0xe0, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x94, 0x2f, 
  0x93, 0x1e, 0x28, 0x44, 0x1c, 0x87, 0x21, 0x2f, 0x71, 0x16, 0x21, 0x17, 0xf0, 0xd6, 0x25, 0x0f, 
  0x94, 0x07, 0x8b, 0x6a, 0x2c, 0x25, 0x33, 0x7e, 0xb0, 0xfd, 0xed, 0x27, 0x32, 0x25, 0xf2, 0xb9, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08, 
  0x3c, 0x75, 0x6c, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xfa, 0xdd, 0xa0, 0x8e, 0x8d, 0x72, 0x04, 0x35, 0x68, 0x9a, 0xc4, 0xb2, 0x9a, 0x95, 0x3c, 0xfa, 
  0xa4, 0x08, 0xb4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xee, 0xcf, 0x93, 
  0x68, 0xd1, 0x51, 0xcd, 0x24, 0x25, 0xca, 0x54, 0x76, 0x95, 0xe5, 0x1e, 0xa8, 0xba, 0x13, 0xc7, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x15, 0x0a, 0x33, 
  0xff, 0xa9, 0x7a, 0x8d, 0x22, 0xf5, 0x9c, 0x77, 0xae, 0x54, 0x87, 0xb0, 0x89, 0xef, 0x62, 0xe9, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xc3, 0x79, 0x37, 0xe0, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x94, 0x49, 
  0xbf, 0x67, 0x10, 0xaf, 0x64, 0x68, 0xb9, 0x39, 0xfd, 0x7b, 0x99, 0x90, 0x7e, 0x8b, 0xfb, 0xe0, 
  0xa7, 0xbf, 0xfc, 0x75, 0xaa, 0xc4, 0xfc, 0x82, 0xaf, 0xa6, 0xf9, 0xbe, 0x8b, 0x9b, 0x0a, 0x93, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08, 
  0x3c, 0x75, 0x6c, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xfa, 0xdd, 0xa0, 0x8e, 0x8d, 0x72, 0x04, 0x35, 0x68, 0x9a, 0xc4, 0xb2, 0x9a, 0x95, 0x3c, 0xfa, 
  0xa4, 0x08, 0xb4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xee, 0xcf, 0x93, 
  0x68, 0xd1, 0x51, 0xcd, 0x24, 0x25, 0xca, 0x54, 0x76, 0x95, 0xe5, 0x1e, 0xa8, 0xba, 0x13, 0xc7, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x15, 0x0a, 0x33, 
  0xff, 0xa9, 0x7a, 0x8d, 0x22, 0xf5, 0x9c, 0x77, 0xae, 0x54, 0x87, 0xb0, 0x89, 0xef, 0x62, 0xe9, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xc3, 0x79, 0x37, 0xe0, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x94, 0x76, 
  0x01, 0xc9, 0xa5, 0x99, 0x8b, 0x69, 0xfb, 0x9b, 0x59, 0xe8, 0xa5, 0x00, 0x5d, 0x65, 0xc7, 0x5d, 
  0x3f, 0xb4, 0x79, 0x59, 0x2c, 0x80, 0x77, 0x6e, 0xac, 0x62, 0x38, 0x16, 0xbf, 0x09, 0x52, 0x5b, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08, 
  0x3c, 0x75, 0x6c, 0xc2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xfa, 0xdd, 0xa0, 0x8e, 0x8d, 0x72, 0x04, 0x35, 0x68, 0x9a, 0xc4, 0xb2, 0x9a, 0x95, 0x3c, 0xfa, 
  0xa4, 0x08, 0xb4, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
  0x1c, 0x13, 0xe9, 0xa6, 0x66, 0x63, 0xd1, 0x2c, 0x1c, 0x22, 0xd6, 0xd8, 0xf4, 0x56, 0x95, 0xcc, 
  0x09, 0x3e, 0x54, 0x0f, 0x80, 0x22, 0xff, 0x3c, 0x18, 0xf0, 0x6c, 0xb8, 0xde, 0xd5, 0xfb, 0x2b, 
  0x87, 0x05, 0xf3, 0x35, 0x44, 0xd0, 0x21, 0x45, 0x39, 0x6f, 0x32, 0x11, 0x53, 0x41, 0x60, 0x11, 
  0xd0, 0xcb, 0x79, 0x74, 0xeb, 0x75, 0xd3, 0x79, 0xfe, 0xa5, 0x9f, 0x36, 0x9f, 0x35, 0xd4, 0x7d, 
  0x23, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
  0x1c, 0x75, 0xe1, 0x32, 0xba, 0x33, 0xa4, 0x95, 0xd0, 0x15, 0xed, 0x17, 0x2d, 0x13, 0x9f, 0x18, 
  0x32, 0xf3, 0x0f, 0xee, 0xcd, 0xca, 0x05, 0x81, 0x71, 0x02, 0x0d, 0x81, 0xd9, 0xff, 0x0d, 0xac, 
  0x57, 0x15, 0x41, 0x24, 0x0a, 0x73, 0xc5, 0x36, 0x6d, 0xbc, 0xfc, 0x2f, 0xff, 0x40, 0x6f, 0x4f, 
  0x6f, 0x4e, 0x69, 0xcc, 0xe5, 0x41, 0x65, 0x5a, 0x3f, 0xc6, 0xb3, 0x32, 0xfa, 0x84, 0x03, 0xd4, 
  0x41, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
  0x1c, 0x1e, 0x42, 0xd0, 0xe4, 0x42, 0x36, 0x37, 0x96, 0x09, 0xef, 0xa2, 0xe6, 0x4c, 0xbc, 0x67, 
  0x87, 0x4a, 0x30, 0x36, 0x3f, 0x5f, 0xce, 0xb2, 0x52, 0x2d, 0x58, 0x75, 0xb3, 0x03, 0xac, 0x2a, 
  0x3e, 0x35, 0x71, 0x61, 0x57, 0x54, 0x3e, 0x12, 0xd6, 0x7d, 0x56, 0x93, 0x4e, 0x37, 0x6a, 0x93, 
  0x01, 0xc3, 0xdc, 0xd3, 0xba, 0x2b, 0xa9, 0xe9, 0x7f, 0x27, 0xf6, 0xa4, 0x01, 0x4a, 0x0e, 0xd2, 
  0x4e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

uint8_t marketSellOrders_p1[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00, 
};

uint8_t marketSellOrders_p2_0[66] = {
  0x1c, 0x13, 0xe9, 0xa6, 0x66, 0x63, 0xd1, 0x2c, 0x1c, 0x22, 0xd6, 0xd8, 0xf4, 0x56, 0x95, 0xcc,
  0x09, 0x3e, 0x54, 0x0f, 0x80, 0x22, 0xff, 0x3c, 0x18, 0xf0, 0x6c, 0xb8, 0xde, 0xd5, 0xfb, 0x2b,
  0x87, 0x05, 0xf3, 0x35, 0x44, 0xd0, 0x21, 0x45, 0x39, 0x6f, 0x32, 0x11, 0x53, 0x41, 0x60, 0x11,
  0xd0, 0xcb, 0x79, 0x74, 0xeb, 0x75, 0xd3, 0x79, 0xfe, 0xa5, 0x9f, 0x36, 0x9f, 0x35, 0xd4, 0x7d,
  0x23, 0x03,
};

uint8_t marketSellOrders_p2_1[66] = {
  0x1c, 0x75, 0xe1, 0x32, 0xba, 0x33, 0xa4, 0x95, 0xd0, 0x15, 0xed, 0x17, 0x2d, 0x13, 0x9f, 0x18,
  0x32, 0xf3, 0x0f, 0xee, 0xcd, 0xca, 0x05, 0x81, 0x71, 0x02, 0x0d, 0x81, 0xd9, 0xff, 0x0d, 0xac,
  0x57, 0x15, 0x41, 0x24, 0x0a, 0x73, 0xc5, 0x36, 0x6d, 0xbc, 0xfc, 0x2f, 0xff, 0x40, 0x6f, 0x4f,
  0x6f, 0x4e, 0x69, 0xcc, 0xe5, 0x41, 0x65, 0x5a, 0x3f, 0xc6, 0xb3, 0x32, 0xfa, 0x84, 0x03, 0xd4,
  0x41, 0x03,
};

uint8_t marketSellOrders_p2_2[66] = {
  0x1c, 0x1e, 0x42, 0xd0, 0xe4, 0x42, 0x36, 0x37, 0x96, 0x09, 0xef, 0xa2, 0xe6, 0x4c, 0xbc, 0x67,
  0x87, 0x4a, 0x30, 0x36, 0x3f, 0x5f, 0xce, 0xb2, 0x52, 0x2d, 0x58, 0x75, 0xb3, 0x03, 0xac, 0x2a,
  0x3e, 0x35, 0x71, 0x61, 0x57, 0x54, 0x3e, 0x12, 0xd6, 0x7d, 0x56, 0x93, 0x4e, 0x37, 0x6a, 0x93,
  0x01, 0xc3, 0xdc, 0xd3, 0xba, 0x2b, 0xa9, 0xe9, 0x7f, 0x27, 0xf6, 0xa4, 0x01, 0x4a, 0x0e, 0xd2,
  0x4e, 0x03,
};

uint8_t marketSellOrders_p0_t0_p0[20] = {
  0xb1, 0xeE, 0xCF, 0x93, 0x68, 0xd1, 0x51, 0xcd, 0x24, 0x25, 0xCa, 0x54, 0x76, 0x95, 0xE5, 0x1e,
  0xa8, 0xba, 0x13, 0xC7,
};

uint8_t marketSellOrders_p0_t0_p1[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t0_p2[20] = {
  0x5E, 0x15, 0x0a, 0x33, 0xfF, 0xA9, 0x7A, 0x8D, 0x22, 0xf5, 0x9C, 0x77, 0xAe, 0x54, 0x87, 0xb0,
  0x89, 0xeF, 0x62, 0xE9,
};

uint8_t marketSellOrders_p0_t0_p3[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t0_p4[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xc3, 0x79, 0x37, 0xe0, 0x80, 0x00,
};

uint8_t marketSellOrders_p0_t0_p5[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00,
};

uint8_t marketSellOrders_p0_t0_p6[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t0_p7[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t0_p8[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x94, 0x2f,
};

uint8_t marketSellOrders_p0_t0_p9[32] = {
  0x93, 0x1e, 0x28, 0x44, 0x1c, 0x87, 0x21, 0x2f, 0x71, 0x16, 0x21, 0x17, 0xf0, 0xd6, 0x25, 0x0f,
  0x94, 0x07, 0x8b, 0x6a, 0x2c, 0x25, 0x33, 0x7e, 0xb0, 0xfd, 0xed, 0x27, 0x32, 0x25, 0xf2, 0xb9,
};

uint8_t marketSellOrders_p0_t0_p10[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08,
  0x3c, 0x75, 0x6c, 0xc2,
};

uint8_t marketSellOrders_p0_t0_p11[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfa, 0xdd, 0xa0, 0x8e, 0x8d, 0x72, 0x04, 0x35, 0x68, 0x9a, 0xc4, 0xb2, 0x9a, 0x95, 0x3c, 0xfa,
  0xa4, 0x08, 0xb4, 0x03,
};

uint8_t marketSellOrders_p0_t1_p0[20] = {
  0xb1, 0xeE, 0xCF, 0x93, 0x68, 0xd1, 0x51, 0xcd, 0x24, 0x25, 0xCa, 0x54, 0x76, 0x95, 0xE5, 0x1e,
  0xa8, 0xba, 0x13, 0xC7,
};

uint8_t marketSellOrders_p0_t1_p1[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t1_p2[20] = {
  0x5E, 0x15, 0x0a, 0x33, 0xfF, 0xA9, 0x7A, 0x8D, 0x22, 0xf5, 0x9C, 0x77, 0xAe, 0x54, 0x87, 0xb0,
  0x89, 0xeF, 0x62, 0xE9,
};

uint8_t marketSellOrders_p0_t1_p3[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t1_p4[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xc3, 0x79, 0x37, 0xe0, 0x80, 0x00,
};

uint8_t marketSellOrders_p0_t1_p5[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00,
};

uint8_t marketSellOrders_p0_t1_p6[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t1_p7[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t1_p8[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x94, 0x49,
};

uint8_t marketSellOrders_p0_t1_p9[32] = {
  0xbf, 0x67, 0x10, 0xaf, 0x64, 0x68, 0xb9, 0x39, 0xfd, 0x7b, 0x99, 0x90, 0x7e, 0x8b, 0xfb, 0xe0,
  0xa7, 0xbf, 0xfc, 0x75, 0xaa, 0xc4, 0xfc, 0x82, 0xaf, 0xa6, 0xf9, 0xbe, 0x8b, 0x9b, 0x0a, 0x93,
};

uint8_t marketSellOrders_p0_t1_p10[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08,
  0x3c, 0x75, 0x6c, 0xc2,
};

uint8_t marketSellOrders_p0_t1_p11[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfa, 0xdd, 0xa0, 0x8e, 0x8d, 0x72, 0x04, 0x35, 0x68, 0x9a, 0xc4, 0xb2, 0x9a, 0x95, 0x3c, 0xfa,
  0xa4, 0x08, 0xb4, 0x03,
};

uint8_t marketSellOrders_p0_t2_p0[20] = {
  0xb1, 0xeE, 0xCF, 0x93, 0x68, 0xd1, 0x51, 0xcd, 0x24, 0x25, 0xCa, 0x54, 0x76, 0x95, 0xE5, 0x1e,
  0xa8, 0xba, 0x13, 0xC7,
};

uint8_t marketSellOrders_p0_t2_p1[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t2_p2[20] = {
  0x5E, 0x15, 0x0a, 0x33, 0xfF, 0xA9, 0x7A, 0x8D, 0x22, 0xf5, 0x9C, 0x77, 0xAe, 0x54, 0x87, 0xb0,
  0x89, 0xeF, 0x62, 0xE9,
};

uint8_t marketSellOrders_p0_t2_p3[20] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t2_p4[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xc3, 0x79, 0x37, 0xe0, 0x80, 0x00,
};

uint8_t marketSellOrders_p0_t2_p5[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x0b, 0xe4, 0x00,
};

uint8_t marketSellOrders_p0_t2_p6[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t2_p7[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t marketSellOrders_p0_t2_p8[32] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x94, 0x76,
};

uint8_t marketSellOrders_p0_t2_p9[32] = {
  0x01, 0xc9, 0xa5, 0x99, 0x8b, 0x69, 0xfb, 0x9b, 0x59, 0xe8, 0xa5, 0x00, 0x5d, 0x65, 0xc7, 0x5d,
  0x3f, 0xb4, 0x79, 0x59, 0x2c, 0x80, 0x77, 0x6e, 0xac, 0x62, 0x38, 0x16, 0xbf, 0x09, 0x52, 0x5b,
};

uint8_t marketSellOrders_p0_t2_p10[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x2a, 0xaa, 0x39, 0xb2, 0x23, 0xfe, 0x8d, 0x0a, 0x0e, 0x5c, 0x4f, 0x27, 0xea, 0xd9, 0x08,
  0x3c, 0x75, 0x6c, 0xc2,
};

uint8_t marketSellOrders_p0_t2_p11[36] = {
  0xf4, 0x72, 0x61, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfa, 0xdd, 0xa0, 0x8e, 0x8d, 0x72, 0x04, 0x35, 0x68, 0x9a, 0xc4, 0xb2, 0x9a, 0x95, 0x3c, 0xfa,
  0xa4, 0x08, 0xb4, 0x03,
};

// bool, (bool, address), bool
ABI_t tupleElementary_abi[5] = {
  { .type = ABI_BOOL },
  { .type = ABI_TUPLE2 },
  { .type = ABI_BOOL },
  { .type = ABI_BOOL },
  { .type = ABI_ADDRESS },
};

uint8_t tupleElementary_encoded[128] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xaf, 0x9d, 0xe9,
  0x53, 0xb2, 0x9d, 0xe8, 0xa6, 0x82, 0xdf, 0x89, 0x0e, 0x3e, 0x09, 0xac, 0xff, 0x94, 0xc2, 0xab,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

uint8_t tupleElementary_p0[1] = {
  0x01,
};
uint8_t tupleElementary_p2[1] = {
  0x01,
};
uint8_t tupleElementary_p1_t0_p0[1] = {
  0x01,
};
uint8_t tupleElementary_p1_t0_p1[20] = {
  0x06, 0xaf, 0x9d, 0xe9, 0x53, 0xb2, 0x9d, 0xe8, 0xa6, 0x82, 0xdf, 0x89, 0x0e, 0x3e, 0x09, 0xac,
  0xff, 0x94, 0xc2, 0xab
};


// bool, (bool, address)[2], bool
ABI_t tupleFixedArray0_abi[5] = {
  { .type = ABI_BOOL },
  { .type = ABI_TUPLE2, .isArray = true, .arraySz = 2},
  { .type = ABI_BOOL, .isArray = true, .arraySz = 1 },
  { .type = ABI_BOOL },
  { .type = ABI_ADDRESS },
};

uint8_t tupleFixedArray0_encoded[192] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd2, 0xa1, 0x12, 0x03,
  0x29, 0x85, 0xf4, 0xea, 0xc7, 0x4b, 0xa1, 0xcb, 0x10, 0x5e, 0x44, 0xf5, 0x0e, 0x70, 0xc5, 0x54,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x1d, 0x97, 0xad,
  0x6b, 0x3b, 0x3c, 0x1f, 0x8e, 0xd3, 0x33, 0x26, 0xd7, 0xc2, 0x13, 0xbf, 0x18, 0xdd, 0x16, 0xa4,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
};

uint8_t tupleFixedArray0_p0[1] = {
  0x01,
};
uint8_t tupleFixedArray0_p2_0[1] = {
  0x01,
};
uint8_t tupleFixedArray0_p1_t0_p0[1] = {
  0x01,
};
uint8_t tupleFixedArray0_p1_t0_p1[20] = {
  0xd2, 0xa1, 0x12, 0x03, 0x29, 0x85, 0xf4, 0xea, 0xc7, 0x4b, 0xa1, 0xcb, 0x10, 0x5e, 0x44, 0xf5, 
  0x0e, 0x70, 0xc5, 0x54
};
uint8_t tupleFixedArray0_p1_t1_p0[1] = {
  0x00,
};
uint8_t tupleFixedArray0_p1_t1_p1[20] = {
  0x09, 0x1d, 0x97, 0xad, 0x6b, 0x3b, 0x3c, 0x1f, 0x8e, 0xd3, 0x33, 0x26, 0xd7, 0xc2, 0x13, 0xbf, 
  0x18, 0xdd, 0x16, 0xa4,
};

//'bool', '(bool, bytes)[2]', 'bool'
ABI_t tupleFixedArray1_abi[5] = {
  { .type = ABI_BOOL },
  { .type = ABI_TUPLE2, .isArray = true, .arraySz = 2},
  { .type = ABI_BOOL },
  { .type = ABI_BOOL },
  { .type = ABI_BYTES },
};
uint8_t tupleFixedArray1_encoded[416] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x01, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x05, 0x06, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t tupleFixedArray1_p0[1] = {
  0x01,
};
uint8_t tupleFixedArray1_p2[1] = {
  0x01,
};
uint8_t tupleFixedArray1_p1_t0_p0[1] = {
  0x01,
};
uint8_t tupleFixedArray1_p1_t0_p1[4] = {
  0x01, 0x02, 0x03, 0x04,
};
uint8_t tupleFixedArray1_p1_t1_p0[1] = {
  0x00,
};
uint8_t tupleFixedArray1_p1_t1_p1[4] = {
  0x05, 0x06, 0x07, 0x08,
};

//'bool', '(bool, address)[]', 'bool'
ABI_t tupleVarArray0_abi[5] = {
  { .type = ABI_BOOL },
  { .type = ABI_TUPLE2, .isArray = true, .arraySz = 0},
  { .type = ABI_BOOL },
  { .type = ABI_BOOL },
  { .type = ABI_ADDRESS },
};
uint8_t tupleVarArray0_encoded[256] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x6a, 0x27, 0xdd,
  0x48, 0xd0, 0xc7, 0xf0, 0xec, 0x49, 0x91, 0x46, 0x56, 0x1c, 0xb9, 0xf4, 0x17, 0x00, 0xa3, 0x78,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x89, 0x4b, 0x47,
  0x4f, 0xc3, 0x4f, 0x96, 0x59, 0x69, 0x3d, 0xbe, 0x60, 0x7c, 0x71, 0x7d, 0x9c, 0x3b, 0x67, 0x12,
};

uint8_t tupleVarArray0_p0[1] = {
  0x01,
};
uint8_t tupleVarArray0_p2[1] = {
  0x01,
};
uint8_t tupleVarArray0_p1_t0_p0[1] = {
  0x01,
};
uint8_t tupleVarArray0_p1_t0_p1[20] = {
  0x61, 0x6a, 0x27, 0xdd, 0x48, 0xd0, 0xc7, 0xf0, 0xec, 0x49, 0x91, 0x46, 0x56, 0x1c, 0xb9, 0xf4, 
  0x17, 0x00, 0xa3, 0x78,
};
uint8_t tupleVarArray0_p1_t1_p0[1] = {
  0x00,
};
uint8_t tupleVarArray0_p1_t1_p1[20] = {
  0x2e, 0x89, 0x4b, 0x47, 0x4f, 0xc3, 0x4f, 0x96, 0x59, 0x69, 0x3d, 0xbe, 0x60, 0x7c, 0x71, 0x7d, 
  0x9c, 0x3b, 0x67, 0x12,
};

//'bool', '(bool, bytes)[]', 'bool'
ABI_t tupleVarArray1_abi[5] = {
  { .type = ABI_BOOL },
  { .type = ABI_TUPLE2, .isArray = true, .arraySz = 0},
  { .type = ABI_BOOL },
  { .type = ABI_BOOL },
  { .type = ABI_BYTES },
};
uint8_t tupleVarArray1_encoded[448] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x01, 0x02, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x05, 0x06, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
uint8_t tupleVarArray1_p0[1] = {
  0x01,
};
uint8_t tupleVarArray1_p2[1] = {
  0x01,
};
uint8_t tupleVarArray1_p1_t0_p0[1] = {
  0x01,
};
uint8_t tupleVarArray1_p1_t0_p1[4] = {
  0x01, 0x02, 0x03, 0x04,
};
uint8_t tupleVarArray1_p1_t1_p0[1] = {
  0x00,
};
uint8_t tupleVarArray1_p1_t1_p1[4] = {
  0x05, 0x06, 0x07, 0x08,
};

// (bytes13[3],bytes32[8],address)[],bool
ABI_t tupleVarArray2_abi[5] = {
  { .type = ABI_TUPLE3, .isArray = true, .arraySz = 0},
  { .type = ABI_BOOL },
  { .type = ABI_BYTES13, .isArray = true, .arraySz = 3 },
  { .type = ABI_BYTES32, .isArray = true, .arraySz = 8 },
  { .type = ABI_ADDRESS },
};
uint8_t tupleVarArray2_encoded[864] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x3b, 0xeb, 0x1d, 0x5c, 0x29, 0x05, 0x46, 0x5c, 0xe9, 0x8f, 0x7d, 0x28, 0xea, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x51, 0xe3, 0x30, 0xf7, 0x5a, 0xc3, 0x3f, 0xda, 0x7b, 0x9c, 0x6e, 0xd8, 0x63, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc5, 0xb7, 0x5e, 0x63, 0xc2, 0xa4, 0xbd, 0x47, 0x88, 0xfa, 0xd2, 0xf7, 0xd2, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfe, 0x26, 0x48, 0x35, 0xe9, 0xf4, 0x2f, 0x8f, 0x6a, 0x17, 0x97, 0xea, 0xcf, 0x48, 0x24, 0xe1,
  0x20, 0xf7, 0x43, 0x00, 0xbe, 0xda, 0xcf, 0x82, 0x59, 0x8a, 0xd8, 0x4e, 0xcc, 0xe6, 0x80, 0x5e,
  0x09, 0xde, 0x93, 0x22, 0x76, 0x0a, 0x3c, 0x93, 0x0a, 0xcc, 0x85, 0xfb, 0x80, 0xd0, 0x59, 0x1a,
  0x9d, 0x25, 0x57, 0xe7, 0xd3, 0xad, 0x1d, 0xfc, 0xe5, 0x08, 0xde, 0xed, 0x9e, 0xb0, 0x11, 0x10,
  0x64, 0x48, 0x1c, 0x49, 0x45, 0xd2, 0x8b, 0x17, 0x50, 0xd6, 0xe1, 0xe8, 0xa7, 0xac, 0x81, 0xf5,
  0xa3, 0xb8, 0xe5, 0xe1, 0xa9, 0x3e, 0x75, 0xf5, 0x36, 0xee, 0x2e, 0xf2, 0xe1, 0xe7, 0xdb, 0xfe,
  0xe9, 0x11, 0xda, 0xa0, 0x5a, 0x2c, 0xba, 0x01, 0x2c, 0xeb, 0x91, 0x99, 0x9f, 0x61, 0xf3, 0x4e,
  0xe7, 0x94, 0x95, 0xa3, 0xc6, 0xbc, 0x18, 0xef, 0x10, 0xa2, 0x98, 0x9b, 0xc7, 0x6d, 0xe1, 0x0f,
  0x89, 0x0b, 0x33, 0xe3, 0xcd, 0xb6, 0xf5, 0x68, 0xeb, 0xa5, 0x87, 0x17, 0x1d, 0x27, 0x5e, 0x49,
  0x05, 0x53, 0xb5, 0xb9, 0xa2, 0x44, 0x59, 0x4c, 0x9a, 0x85, 0x5b, 0x2c, 0xfb, 0xc0, 0xd8, 0xcc,
  0xeb, 0x43, 0x71, 0xd9, 0xd3, 0xfc, 0x90, 0x38, 0xba, 0xb9, 0xa4, 0xb3, 0xf6, 0x13, 0xba, 0xb8,
  0x23, 0x88, 0x81, 0x64, 0xeb, 0x74, 0xe7, 0xde, 0xf9, 0xee, 0x76, 0x62, 0x06, 0xb6, 0x59, 0xe7,
  0x78, 0xc5, 0x2e, 0xf1, 0xa5, 0xee, 0xfc, 0x9a, 0x26, 0x38, 0x9b, 0x5d, 0xc4, 0x0d, 0x37, 0x11,
  0x9b, 0x98, 0x6c, 0xd2, 0x38, 0xdd, 0x9f, 0x4d, 0x3b, 0x85, 0xd9, 0xfc, 0xd9, 0x0c, 0x71, 0x97,
  0xd6, 0x50, 0xa0, 0x8e, 0x3f, 0x6c, 0x82, 0xad, 0x8f, 0xbe, 0x08, 0xc0, 0x16, 0xd7, 0x04, 0x6a,
  0x2d, 0x86, 0x7a, 0x1d, 0x4f, 0x46, 0x8c, 0x15, 0xc1, 0x69, 0xbf, 0xe2, 0xf6, 0xc4, 0x9a, 0x9a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x6a, 0x2b, 0x10,
  0xef, 0xc8, 0x57, 0x42, 0x1b, 0xb3, 0xa4, 0xde, 0xe3, 0x66, 0xbd, 0x25, 0xa7, 0x46, 0xfe, 0xb6,
  0x6f, 0x11, 0x43, 0xe8, 0xfd, 0x43, 0x31, 0x88, 0xcf, 0x5d, 0x7c, 0x08, 0xdf, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x27, 0xb3, 0xba, 0x83, 0xe1, 0xba, 0xb8, 0x61, 0x4e, 0x8d, 0xc0, 0x61, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xdf, 0x34, 0x8c, 0x0f, 0x1d, 0x63, 0x60, 0x76, 0x0e, 0x0c, 0xbf, 0xd8, 0x6a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xe9, 0xc1, 0xd0, 0x1d, 0xb5, 0x79, 0x44, 0xca, 0xec, 0x75, 0xb7, 0x2d, 0x70, 0x7d, 0x1a, 0xbf,
  0xac, 0xb7, 0xe4, 0x49, 0x05, 0xfb, 0x9d, 0x9e, 0xaa, 0xba, 0x23, 0x24, 0xce, 0x7a, 0xc8, 0x37,
  0xaf, 0x2c, 0xbb, 0xbb, 0x97, 0x99, 0xae, 0xa3, 0xc0, 0x4e, 0xfe, 0x19, 0xfa, 0x44, 0xe8, 0x85,
  0x0e, 0x1a, 0xbd, 0xe2, 0x41, 0x2f, 0xd1, 0xb8, 0x57, 0xc2, 0x18, 0x07, 0x4a, 0x2f, 0xea, 0x07,
  0xbd, 0x8f, 0x94, 0x88, 0x55, 0x07, 0x3c, 0x7d, 0x9b, 0x44, 0xf4, 0x63, 0x7a, 0xa5, 0x18, 0x55,
  0x35, 0x0e, 0xbb, 0xed, 0xa3, 0x88, 0x50, 0x43, 0xca, 0x45, 0xfe, 0x47, 0x4e, 0xd1, 0x17, 0x7d,
  0xc0, 0x88, 0xe3, 0x61, 0x84, 0x2a, 0xe3, 0x4d, 0xcf, 0xf9, 0x1e, 0xd5, 0x1a, 0xe2, 0x7d, 0x2c,
  0xc8, 0x02, 0x65, 0x89, 0x23, 0x48, 0x29, 0x9f, 0x7e, 0x9e, 0x20, 0x27, 0xfb, 0x53, 0xbb, 0x80,
  0x13, 0xb6, 0x0c, 0xc4, 0x9b, 0x7c, 0xac, 0x94, 0x79, 0xfc, 0xf3, 0x3c, 0x4c, 0xc7, 0x57, 0xd8,
  0xeb, 0xee, 0x3d, 0x38, 0xb9, 0x8c, 0x0b, 0x81, 0x36, 0x89, 0x81, 0xab, 0x5e, 0x39, 0xb4, 0xc9,
  0xfc, 0xc3, 0xf7, 0xbb, 0x17, 0x9b, 0xca, 0x32, 0x94, 0x17, 0x6d, 0x8f, 0x1b, 0x1b, 0x13, 0x34,
  0x93, 0x1b, 0xd0, 0x49, 0xd0, 0x48, 0x3d, 0xff, 0xc0, 0x93, 0xc2, 0x15, 0xb9, 0x2c, 0xae, 0xfb,
  0xc5, 0xfe, 0x1d, 0xf3, 0xac, 0xf2, 0xa9, 0x28, 0xf6, 0x91, 0x1d, 0x6d, 0x23, 0x7b, 0x93, 0xfe,
  0xa9, 0x50, 0xdd, 0xc5, 0x6d, 0xb5, 0x1e, 0x9b, 0xaa, 0xad, 0x23, 0x61, 0x07, 0xb8, 0x5e, 0xa7,
  0xad, 0xa3, 0x03, 0x1d, 0xb4, 0x65, 0xdc, 0xad, 0xd7, 0x88, 0x68, 0xb5, 0x67, 0xd9, 0xf7, 0xd2,
  0x40, 0x45, 0x97, 0x97, 0x3c, 0xc4, 0x6b, 0xfb, 0x6f, 0x02, 0xd6, 0x7b, 0x26, 0x3b, 0xd9, 0x09,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x0b, 0xe1, 0x2b,
  0x49, 0xb5, 0xd6, 0xed, 0x15, 0x50, 0xe0, 0xf5, 0x32, 0xd9, 0xd7, 0x2b, 0xd5, 0x2a, 0x1a, 0xa0,
};

uint8_t tupleVarArray2_p1[1] = {
  0x01,
};

uint8_t tupleVarArray2_p1_t0_p0_0[13] = {
  0x3b, 0xeb, 0x1d, 0x5c, 0x29, 0x05, 0x46, 0x5c, 0xe9, 0x8f, 0x7d, 0x28, 0xea,
};
uint8_t tupleVarArray2_p1_t0_p0_1[13] = {
  0x51, 0xe3, 0x30, 0xf7, 0x5a, 0xc3, 0x3f, 0xda, 0x7b, 0x9c, 0x6e, 0xd8, 0x63
};
uint8_t tupleVarArray2_p1_t0_p0_2[13] = {
  0xc5, 0xb7, 0x5e, 0x63, 0xc2, 0xa4, 0xbd, 0x47, 0x88, 0xfa, 0xd2, 0xf7, 0xd2
};
uint8_t tupleVarArray2_p1_t0_p1_0[32] = {
  0xfe, 0x26, 0x48, 0x35, 0xe9, 0xf4, 0x2f, 0x8f, 0x6a, 0x17, 0x97, 0xea, 0xcf, 0x48, 0x24, 0xe1,
  0x20, 0xf7, 0x43, 0x00, 0xbe, 0xda, 0xcf, 0x82, 0x59, 0x8a, 0xd8, 0x4e, 0xcc, 0xe6, 0x80, 0x5e,
};
uint8_t tupleVarArray2_p1_t0_p1_1[32] = {
  0x09, 0xde, 0x93, 0x22, 0x76, 0x0a, 0x3c, 0x93, 0x0a, 0xcc, 0x85, 0xfb, 0x80, 0xd0, 0x59, 0x1a,
  0x9d, 0x25, 0x57, 0xe7, 0xd3, 0xad, 0x1d, 0xfc, 0xe5, 0x08, 0xde, 0xed, 0x9e, 0xb0, 0x11, 0x10,
};
uint8_t tupleVarArray2_p1_t0_p1_2[32] = {
  0x64, 0x48, 0x1c, 0x49, 0x45, 0xd2, 0x8b, 0x17, 0x50, 0xd6, 0xe1, 0xe8, 0xa7, 0xac, 0x81, 0xf5,
  0xa3, 0xb8, 0xe5, 0xe1, 0xa9, 0x3e, 0x75, 0xf5, 0x36, 0xee, 0x2e, 0xf2, 0xe1, 0xe7, 0xdb, 0xfe,
};
uint8_t tupleVarArray2_p1_t0_p1_3[32] = {
  0xe9, 0x11, 0xda, 0xa0, 0x5a, 0x2c, 0xba, 0x01, 0x2c, 0xeb, 0x91, 0x99, 0x9f, 0x61, 0xf3, 0x4e,
  0xe7, 0x94, 0x95, 0xa3, 0xc6, 0xbc, 0x18, 0xef, 0x10, 0xa2, 0x98, 0x9b, 0xc7, 0x6d, 0xe1, 0x0f,
};
uint8_t tupleVarArray2_p1_t0_p1_4[32] = {
  0x89, 0x0b, 0x33, 0xe3, 0xcd, 0xb6, 0xf5, 0x68, 0xeb, 0xa5, 0x87, 0x17, 0x1d, 0x27, 0x5e, 0x49,
  0x05, 0x53, 0xb5, 0xb9, 0xa2, 0x44, 0x59, 0x4c, 0x9a, 0x85, 0x5b, 0x2c, 0xfb, 0xc0, 0xd8, 0xcc,
};
uint8_t tupleVarArray2_p1_t0_p1_5[32] = {
  0xeb, 0x43, 0x71, 0xd9, 0xd3, 0xfc, 0x90, 0x38, 0xba, 0xb9, 0xa4, 0xb3, 0xf6, 0x13, 0xba, 0xb8,
  0x23, 0x88, 0x81, 0x64, 0xeb, 0x74, 0xe7, 0xde, 0xf9, 0xee, 0x76, 0x62, 0x06, 0xb6, 0x59, 0xe7,
};
uint8_t tupleVarArray2_p1_t0_p1_6[32] = {
  0x78, 0xc5, 0x2e, 0xf1, 0xa5, 0xee, 0xfc, 0x9a, 0x26, 0x38, 0x9b, 0x5d, 0xc4, 0x0d, 0x37, 0x11,
  0x9b, 0x98, 0x6c, 0xd2, 0x38, 0xdd, 0x9f, 0x4d, 0x3b, 0x85, 0xd9, 0xfc, 0xd9, 0x0c, 0x71, 0x97,
};
uint8_t tupleVarArray2_p1_t0_p1_7[32] = {
  0xd6, 0x50, 0xa0, 0x8e, 0x3f, 0x6c, 0x82, 0xad, 0x8f, 0xbe, 0x08, 0xc0, 0x16, 0xd7, 0x04, 0x6a,
  0x2d, 0x86, 0x7a, 0x1d, 0x4f, 0x46, 0x8c, 0x15, 0xc1, 0x69, 0xbf, 0xe2, 0xf6, 0xc4, 0x9a, 0x9a,
};
uint8_t tupleVarArray2_p1_t0_p2[20] = {
  0x0f, 0x6a, 0x2b, 0x10, 0xef, 0xc8, 0x57, 0x42, 0x1b, 0xb3, 0xa4, 0xde, 0xe3, 0x66, 0xbd, 0x25, 
  0xa7, 0x46, 0xfe, 0xb6,
};

uint8_t tupleVarArray2_p1_t1_p0_0[13] = {
  0x6f, 0x11, 0x43, 0xe8, 0xfd, 0x43, 0x31, 0x88, 0xcf, 0x5d, 0x7c, 0x08, 0xdf
};
uint8_t tupleVarArray2_p1_t1_p0_1[13] = {
  0x03, 0x27, 0xb3, 0xba, 0x83, 0xe1, 0xba, 0xb8, 0x61, 0x4e, 0x8d, 0xc0, 0x61,
};
uint8_t tupleVarArray2_p1_t1_p0_2[13] = {
  0xdf, 0x34, 0x8c, 0x0f, 0x1d, 0x63, 0x60, 0x76, 0x0e, 0x0c, 0xbf, 0xd8, 0x6a
};
uint8_t tupleVarArray2_p1_t1_p1_0[32] = {
  0xe9, 0xc1, 0xd0, 0x1d, 0xb5, 0x79, 0x44, 0xca, 0xec, 0x75, 0xb7, 0x2d, 0x70, 0x7d, 0x1a, 0xbf,
  0xac, 0xb7, 0xe4, 0x49, 0x05, 0xfb, 0x9d, 0x9e, 0xaa, 0xba, 0x23, 0x24, 0xce, 0x7a, 0xc8, 0x37,
};
uint8_t tupleVarArray2_p1_t1_p1_1[32] = {
  0xaf, 0x2c, 0xbb, 0xbb, 0x97, 0x99, 0xae, 0xa3, 0xc0, 0x4e, 0xfe, 0x19, 0xfa, 0x44, 0xe8, 0x85,
  0x0e, 0x1a, 0xbd, 0xe2, 0x41, 0x2f, 0xd1, 0xb8, 0x57, 0xc2, 0x18, 0x07, 0x4a, 0x2f, 0xea, 0x07,
};
uint8_t tupleVarArray2_p1_t1_p1_2[32] = {
  0xbd, 0x8f, 0x94, 0x88, 0x55, 0x07, 0x3c, 0x7d, 0x9b, 0x44, 0xf4, 0x63, 0x7a, 0xa5, 0x18, 0x55,
  0x35, 0x0e, 0xbb, 0xed, 0xa3, 0x88, 0x50, 0x43, 0xca, 0x45, 0xfe, 0x47, 0x4e, 0xd1, 0x17, 0x7d,
};
uint8_t tupleVarArray2_p1_t1_p1_3[32] = {
  0xc0, 0x88, 0xe3, 0x61, 0x84, 0x2a, 0xe3, 0x4d, 0xcf, 0xf9, 0x1e, 0xd5, 0x1a, 0xe2, 0x7d, 0x2c,
  0xc8, 0x02, 0x65, 0x89, 0x23, 0x48, 0x29, 0x9f, 0x7e, 0x9e, 0x20, 0x27, 0xfb, 0x53, 0xbb, 0x80,
};
uint8_t tupleVarArray2_p1_t1_p1_4[32] = {
  0x13, 0xb6, 0x0c, 0xc4, 0x9b, 0x7c, 0xac, 0x94, 0x79, 0xfc, 0xf3, 0x3c, 0x4c, 0xc7, 0x57, 0xd8,
  0xeb, 0xee, 0x3d, 0x38, 0xb9, 0x8c, 0x0b, 0x81, 0x36, 0x89, 0x81, 0xab, 0x5e, 0x39, 0xb4, 0xc9,
};
uint8_t tupleVarArray2_p1_t1_p1_5[32] = {
  0xfc, 0xc3, 0xf7, 0xbb, 0x17, 0x9b, 0xca, 0x32, 0x94, 0x17, 0x6d, 0x8f, 0x1b, 0x1b, 0x13, 0x34,
  0x93, 0x1b, 0xd0, 0x49, 0xd0, 0x48, 0x3d, 0xff, 0xc0, 0x93, 0xc2, 0x15, 0xb9, 0x2c, 0xae, 0xfb,
};
uint8_t tupleVarArray2_p1_t1_p1_6[32] = {
  0xc5, 0xfe, 0x1d, 0xf3, 0xac, 0xf2, 0xa9, 0x28, 0xf6, 0x91, 0x1d, 0x6d, 0x23, 0x7b, 0x93, 0xfe,
  0xa9, 0x50, 0xdd, 0xc5, 0x6d, 0xb5, 0x1e, 0x9b, 0xaa, 0xad, 0x23, 0x61, 0x07, 0xb8, 0x5e, 0xa7,
};
uint8_t tupleVarArray2_p1_t1_p1_7[32] = {
  0xad, 0xa3, 0x03, 0x1d, 0xb4, 0x65, 0xdc, 0xad, 0xd7, 0x88, 0x68, 0xb5, 0x67, 0xd9, 0xf7, 0xd2,
  0x40, 0x45, 0x97, 0x97, 0x3c, 0xc4, 0x6b, 0xfb, 0x6f, 0x02, 0xd6, 0x7b, 0x26, 0x3b, 0xd9, 0x09,
};
uint8_t tupleVarArray2_p1_t1_p2[20] = {
  0x37, 0x0b, 0xe1, 0x2b, 0x49, 0xb5, 0xd6, 0xed, 0x15, 0x50, 0xe0, 0xf5, 0x32, 0xd9, 0xd7, 0x2b, 
  0xd5, 0x2a, 0x1a, 0xa0
};


// (bool[], address)[],bool
ABI_t tupleVarArray3_abi[4] = {
  { .type = ABI_TUPLE2, .isArray = true, .arraySz = 0},
  { .type = ABI_BOOL },
  { .type = ABI_BOOL, .isArray = true, .arraySz = 0 },
  { .type = ABI_ADDRESS },
};
uint8_t tupleVarArray3_encoded[512] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0xe7, 0x67, 0xd6,
  0xe4, 0xff, 0x4b, 0xfa, 0x38, 0x02, 0xe0, 0xc9, 0xb4, 0x4c, 0xaf, 0xd2, 0x25, 0x04, 0xe8, 0x0a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0xff, 0x4e, 0xb8,
  0xb7, 0x8f, 0x55, 0x6a, 0x82, 0x78, 0x99, 0x00, 0x71, 0xb2, 0x56, 0xb4, 0x8d, 0x9f, 0x04, 0x05,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t tupleVarArray3_p1[1] = {
  0x01,
};

uint8_t tupleVarArray3_p0_t0_p0_0[1] = {
  0x01,
};
uint8_t tupleVarArray3_p0_t0_p0_1[1] = {
  0x00,
};
uint8_t tupleVarArray3_p0_t0_p0_2[1] = {
  0x01,
};
uint8_t tupleVarArray3_p0_t0_p1[20] = {
  0x7d, 0xe7, 0x67, 0xd6, 0xe4, 0xff, 0x4b, 0xfa, 0x38, 0x02, 0xe0, 0xc9, 0xb4, 0x4c, 0xaf, 0xd2, 
  0x25, 0x04, 0xe8, 0x0a,
};

uint8_t tupleVarArray3_p0_t1_p0_0[1] = {
  0x00,
};
uint8_t tupleVarArray3_p0_t1_p0_1[1] = {
  0x00,
};
uint8_t tupleVarArray3_p0_t1_p1[20] = {
  0xce, 0xff, 0x4e, 0xb8, 0xb7, 0x8f, 0x55, 0x6a, 0x82, 0x78, 0x99, 0x00, 0x71, 0xb2, 0x56, 0xb4, 
  0x8d, 0x9f, 0x04, 0x05
};


// (string[], address)[],bool
ABI_t tupleVarArray4_abi[4] = {
  { .type = ABI_TUPLE2, .isArray = true, .arraySz = 0},
  { .type = ABI_BOOL },
  { .type = ABI_STRING, .isArray = true, .arraySz = 0 },
  { .type = ABI_ADDRESS },
};
uint8_t tupleVarArray4_encoded[832] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0xe7, 0x67, 0xd6,
  0xe4, 0xff, 0x4b, 0xfa, 0x38, 0x02, 0xe0, 0xc9, 0xb4, 0x4c, 0xaf, 0xd2, 0x25, 0x04, 0xe8, 0x0a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x74, 0x72, 0x75, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x66, 0x61, 0x6c, 0x73, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x74, 0x72, 0x75, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0xff, 0x4e, 0xb8,
  0xb7, 0x8f, 0x55, 0x6a, 0x82, 0x78, 0x99, 0x00, 0x71, 0xb2, 0x56, 0xb4, 0x8d, 0x9f, 0x04, 0x05,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x66, 0x61, 0x6c, 0x73, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
  0x66, 0x61, 0x6c, 0x73, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

uint8_t tupleVarArray4_p1[1] = {
  0x01,
};

uint8_t tupleVarArray4_p0_t0_p0_0[4] = {
  0x74, 0x72, 0x75, 0x65,
};
uint8_t tupleVarArray4_p0_t0_p0_1[5] = {
  0x66, 0x61, 0x6c, 0x73, 0x65,
};
uint8_t tupleVarArray4_p0_t0_p0_2[4] = {
  0x74, 0x72, 0x75, 0x65,
};
uint8_t tupleVarArray4_p0_t0_p1[20] = {
  0x7d, 0xe7, 0x67, 0xd6, 0xe4, 0xff, 0x4b, 0xfa, 0x38, 0x02, 0xe0, 0xc9, 0xb4, 0x4c, 0xaf, 0xd2, 
  0x25, 0x04, 0xe8, 0x0a,
};

uint8_t tupleVarArray4_p0_t1_p0_0[5] = {
  0x66, 0x61, 0x6c, 0x73, 0x65
};
uint8_t tupleVarArray4_p0_t1_p0_1[5] = {
  0x66, 0x61, 0x6c, 0x73, 0x65
};
uint8_t tupleVarArray4_p0_t1_p1[20] = {
  0xce, 0xff, 0x4e, 0xb8, 0xb7, 0x8f, 0x55, 0x6a, 0x82, 0x78, 0x99, 0x00, 0x71, 0xb2, 0x56, 0xb4, 
  0x8d, 0x9f, 0x04, 0x05
};